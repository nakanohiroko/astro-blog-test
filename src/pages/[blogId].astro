---
// Log the complete request object details
console.log('Request method:', Astro.request.method);
console.log('Request URL (toString):', Astro.request.url.toString());

// Try accessing the raw request URL
const requestUrl = Astro.request.url;
console.log('Raw request URL:', requestUrl);

// Check if we can access headers that might contain the original URL
const requestedUrl = Astro.request.headers.get('x-forwarded-url') || 
                    Astro.request.headers.get('x-original-url') ||
                    Astro.request.headers.get('x-url');
console.log('Forwarded URL from headers:', requestedUrl);

// Try to get the original URL from Vercel-specific headers
const vercelUrl = Astro.request.headers.get('x-vercel-deployment-url');
console.log('Vercel URL:', vercelUrl);

// Get the raw query string from the request
const rawQueryString = Astro.request.url.split('?')[1] || '';
console.log('Raw query string:', rawQueryString);

// For client reference
const clientUrl = Astro.url.toString();
---

<html>
  <head><title>Debug Request</title></head>
  <body>
    <h1>Server Request Debug</h1>
    <p>Check server logs for details</p>
    
    <script>
      // Log what the client sees
      console.log('Client URL:', window.location.href);
      console.log('Client query string:', window.location.search);
      
      // Parse and display the search params on the page
      const urlParams = new URLSearchParams(window.location.search);
      document.body.innerHTML += `<h2>Client-side Parameters:</h2>`;
      for (const [key, value] of urlParams.entries()) {
        document.body.innerHTML += `<p>${key}: ${value}</p>`;
      }
    </script>
  </body>
</html>